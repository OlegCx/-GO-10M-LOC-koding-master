package j_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// JGroupJoinUserReader is a Reader for the JGroupJoinUser structure.
type JGroupJoinUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JGroupJoinUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewJGroupJoinUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewJGroupJoinUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJGroupJoinUserOK creates a JGroupJoinUserOK with default headers values
func NewJGroupJoinUserOK() *JGroupJoinUserOK {
	return &JGroupJoinUserOK{}
}

/*JGroupJoinUserOK handles this case with default header values.

Request processed successfully
*/
type JGroupJoinUserOK struct {
	Payload *models.DefaultResponse
}

func (o *JGroupJoinUserOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/JGroup.joinUser][%d] jGroupJoinUserOK  %+v", 200, o.Payload)
}

func (o *JGroupJoinUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefaultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJGroupJoinUserUnauthorized creates a JGroupJoinUserUnauthorized with default headers values
func NewJGroupJoinUserUnauthorized() *JGroupJoinUserUnauthorized {
	return &JGroupJoinUserUnauthorized{}
}

/*JGroupJoinUserUnauthorized handles this case with default header values.

Unauthorized request
*/
type JGroupJoinUserUnauthorized struct {
	Payload *models.UnauthorizedRequest
}

func (o *JGroupJoinUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /remote.api/JGroup.joinUser][%d] jGroupJoinUserUnauthorized  %+v", 401, o.Payload)
}

func (o *JGroupJoinUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
