package j_compute_stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// JComputeStackSomeReader is a Reader for the JComputeStackSome structure.
type JComputeStackSomeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JComputeStackSomeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewJComputeStackSomeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewJComputeStackSomeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJComputeStackSomeOK creates a JComputeStackSomeOK with default headers values
func NewJComputeStackSomeOK() *JComputeStackSomeOK {
	return &JComputeStackSomeOK{}
}

/*JComputeStackSomeOK handles this case with default header values.

Request processed successfully
*/
type JComputeStackSomeOK struct {
	Payload *models.DefaultResponse
}

func (o *JComputeStackSomeOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/JComputeStack.some][%d] jComputeStackSomeOK  %+v", 200, o.Payload)
}

func (o *JComputeStackSomeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefaultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJComputeStackSomeUnauthorized creates a JComputeStackSomeUnauthorized with default headers values
func NewJComputeStackSomeUnauthorized() *JComputeStackSomeUnauthorized {
	return &JComputeStackSomeUnauthorized{}
}

/*JComputeStackSomeUnauthorized handles this case with default header values.

Unauthorized request
*/
type JComputeStackSomeUnauthorized struct {
	Payload *models.UnauthorizedRequest
}

func (o *JComputeStackSomeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /remote.api/JComputeStack.some][%d] jComputeStackSomeUnauthorized  %+v", 401, o.Payload)
}

func (o *JComputeStackSomeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
