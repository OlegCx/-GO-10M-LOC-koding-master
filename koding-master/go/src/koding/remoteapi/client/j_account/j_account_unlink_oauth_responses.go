package j_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// JAccountUnlinkOauthReader is a Reader for the JAccountUnlinkOauth structure.
type JAccountUnlinkOauthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JAccountUnlinkOauthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewJAccountUnlinkOauthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJAccountUnlinkOauthOK creates a JAccountUnlinkOauthOK with default headers values
func NewJAccountUnlinkOauthOK() *JAccountUnlinkOauthOK {
	return &JAccountUnlinkOauthOK{}
}

/*JAccountUnlinkOauthOK handles this case with default header values.

OK
*/
type JAccountUnlinkOauthOK struct {
	Payload JAccountUnlinkOauthOKBody
}

func (o *JAccountUnlinkOauthOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/JAccount.unlinkOauth/{id}][%d] jAccountUnlinkOauthOK  %+v", 200, o.Payload)
}

func (o *JAccountUnlinkOauthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*JAccountUnlinkOauthOKBody j account unlink oauth o k body
swagger:model JAccountUnlinkOauthOKBody
*/
type JAccountUnlinkOauthOKBody struct {
	models.JAccount

	models.DefaultResponse
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *JAccountUnlinkOauthOKBody) UnmarshalJSON(raw []byte) error {

	var jAccountUnlinkOauthOKBodyAO0 models.JAccount
	if err := swag.ReadJSON(raw, &jAccountUnlinkOauthOKBodyAO0); err != nil {
		return err
	}
	o.JAccount = jAccountUnlinkOauthOKBodyAO0

	var jAccountUnlinkOauthOKBodyAO1 models.DefaultResponse
	if err := swag.ReadJSON(raw, &jAccountUnlinkOauthOKBodyAO1); err != nil {
		return err
	}
	o.DefaultResponse = jAccountUnlinkOauthOKBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o JAccountUnlinkOauthOKBody) MarshalJSON() ([]byte, error) {
	var _parts [][]byte

	jAccountUnlinkOauthOKBodyAO0, err := swag.WriteJSON(o.JAccount)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, jAccountUnlinkOauthOKBodyAO0)

	jAccountUnlinkOauthOKBodyAO1, err := swag.WriteJSON(o.DefaultResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, jAccountUnlinkOauthOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this j account unlink oauth o k body
func (o *JAccountUnlinkOauthOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.JAccount.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.DefaultResponse.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
